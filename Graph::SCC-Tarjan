// 强连通分量 Tarjan做法 （待完善）

const int N=1e4+3;

int dfn[N], low[N], dfncnt, s[N], in_stack[N], tp;
int scc[N], sc;  // 结点 i 所在 SCC 的编号
int sz[N];       // 强连通 i 的大小

void tarjan(int u) 
{
  low[u] = dfn[u] = ++dfncnt, s[++tp] = u, in_stack[u] = 1;
  for (int i = h[u]; i; i = e[i].nex) 
  {
    const int &v = e[i].t;
    if (!dfn[v]) 
    {
      tarjan(v);
      low[u] = min(low[u], low[v]);
    } 
    else if (in_stack[v]) 
    {
      low[u] = min(low[u], dfn[v]);
    }
  }
  if (dfn[u] == low[u]) 
  {
    ++sc;
    while (s[tp] != u) {
    
      scc[s[tp]] = sc;
      sz[sc]++;
      in_stack[s[tp--]] = 0;
    }
    scc[s[tp]] = sc;
    sz[sc]++;
    in_stack[s[tp--]] = 0;
  }
}
